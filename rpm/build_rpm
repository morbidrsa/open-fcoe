#!/bin/bash
#
# Build an open-fcoe source rpm 
#

RPM="open-fcoe"
BRANCH="sles11-sp3"
BASENAME="fcoe-utils"
BASEVER="1.0.26"
BASETAG="v$BASEVER"
DESTDIR=
TMPDIR=
OBS_PRJ=SUSE:SLE-11-SP3:GA
OBS_BRANCH=home:hreinecke:branches
OSC="osc -A https://api.suse.de"
uncommitted_changes=0
submit=1

while [ $# -gt 0 ] ; do
    case "$1" in
	-c|--clean)
	    remove_destdir=1;
	    shift;
	    ;;
        -d)
            DESTDIR=$2;
            shift 2;
            ;;
        --destdir)
            DESTDIR=${$1#*=};
            shift;
            ;;
        -b)
            BRANCH=$2;
            shift 2;
            ;;
        --branch=)
            BRANCH=${1##*=};
            shift;
            ;;
	-o|--use-osc)
	    use_osc=1;
	    shift;
	    ;;
        -f|--force)
            force=1;
	    update=;
            shift;
            ;;
	-m|--maintenance)
	    OBS=SUSE:SLE-11-SP3:Update:Test
	    shift;
	    ;;
        -u|--update)
            update=1;
	    force=;
            shift;
            ;;
        -t|--test)
	    submit=;
	    shift;
            ;;
        *)
            echo "Usage: build_rpm [-c|-f|-o|-u] [-d dir|--destdir=DIR] " \
                 "[-b BRANCH|--branch=BRANCH]"
            exit 1;
            ;;
    esac
done

VERSION=$(sed -n 's/Version: *\(.*\)/\1/p' rpm/$RPM.spec)

if ! which git > /dev/null ; then
    echo "git not found, cannot continue"
    exit 1
fi

if [ -d "$DESTDIR" ] ; then
    if [ -z "$force" ] && [ -z "$update" ] ; then
        echo "directory $DESTDIR exists, cannot continue"
        exit 1
    elif [ -z "$update" ] ; then
        if ! rm -rf "$DESTDIR" ; then
            echo "Cannot remove directory $DESTDIR"
            exit 1
        fi
    fi
else
    DESTDIR=$(mktemp -d --tmpdir $RPM-XXXXXXXX)
    if [ ! -d "$DESTDIR" ] ; then
	echo "Cannot create directory $DESTDIR"
	exit 1
    fi
fi

if ! git branch | grep -q "$BRANCH" ; then
    echo "Branch \"$BRANCH\" does not exist"
    exit 1
else
    echo "Checking out from $BRANCH"
fi

if [ -n "$use_osc" ] ; then
    pushd $DESTDIR
    if ! $OSC meta pkg $OBS_BRANCH:$OBS_PRJ $RPM > /dev/null 2>&1 ; then
	$OSC branch -m "Update with latest fixes" $OBS_PRJ $RPM
    fi
    $OSC co --current-dir $OBS_BRANCH:$OBS_PRJ $RPM
    TMPDIR=${DESTDIR}
    DESTDIR="${DESTDIR}/$RPM"
    popd
fi

git archive --format=tar --prefix=$BASENAME-$BASEVER/ "$BASETAG" \
    | bzip2 > $DESTDIR/$BASENAME-$BASEVER.tar.bz2
git diff $BASETAG..$BRANCH | bzip2 > $DESTDIR/$BASENAME-$BRANCH.diff.bz2

git show $BRANCH:rpm/$RPM.spec > $DESTDIR/$RPM.spec
git show $BRANCH:rpm/$RPM.changes > $DESTDIR/$RPM.changes

echo "$RPM src rpm copied to $DESTDIR"

if [ -n "$use_osc" ] ; then
    pushd $DESTDIR
    osc ar
    osc ci --message="Checked in from git branch $BRANCH"
    if [ -n "$submit" ] ; then
	osc sr
    fi
    popd
fi

if [ -n "$remove_destdir" ] ; then
    rm -rf $DESTDIR
    if [ "$TMPDIR" ] ; then
	rm -rf $TMPDIR
    fi
fi
